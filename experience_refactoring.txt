experience report of refactoring

1、the process of refactoring(how long it took,challenges,easy bits)
2、results（effects on readability, understandability, maintainability,effects on external qualities）
3、provide an assessment on whether the migration to argparse is justified


Refactoring my wc.py using the new module argparse is really a good experience for me since I have learned a lot from this experience. Totally, it took about 8 hours for me to finish the whole process of refactoring, including getting familiar with the usage of argparse through the tutorial, involving my own functions to accomplish the argument parse, realizing the refactoring preliminarily and finally finishing the whole refactoring. 
As far as I am concerned, there are two parts challenging. The first part is the understanding of the attribute of action. Actually, this unnoticed attribute plays a key role in the process of refactoring, by judging the specific flag whether it is true or false, we can decide what action should be taken next. However, the example of the tutorial did not make me pay attention to the attribute in the first place, I had scanned this part quickly, and it took quiet long time for me to discover the usage of it. The other difficult part is dealing with the output of the wc. There are many situations that should be taken into account, what's more, sometimes there will be many prints which repeat many times and lower the efficiency of whole codes if you don't write print into a function. However, when I write the function for getting the output, I spent a large amount of time considering the arguments of output function, because you have to involve the argparse as well as to make the function compatibly facing different conditions. Generally speaking, the whole process of refactoring is not easy, I have to read the tutorials many times to grasp the key methods to employ and have to be patient when my codes report error. I find when I write codes, most of errors are unintentionally, fixing the errors also takes a lot of time.
After the process of refactoring, it apparently improves the readability and maintainability of wc. The module solves the problem of repeating flags. When input two or more same flags, it will automatically recognize them and return one result. Besides, the argparse makes it clear of two types of arguments, flags and files,it can judge which are flags and which are files, which makes it convenient if we updates the functionality of the codes. By dividing the arguments into two group and the parsing of arguments, it facilitates the readability correspondingly. However, when I test the efficiency of wc with argparse, it takes longer time to count the files. Without argparse, the CPUTime is about 0.025s, while importing the module, time increases to 0.040s.
Although it takes longer time when executing the command, the migration of argparse brings many benefits to the wc. It reconstructs the codes and improves the maintainability. I believe for a big project, this module is indispensable, since a big project pay more attention to the design and construction.