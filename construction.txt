Inheritance is a general way that allows person class handling the complicated name situation, and LSP principle is used to standardize the objects of inheritance. It refers to an object directly using another object's properties and methods. However, the subclasses are not able to inherits the private variables and private methods. According to Falsehoods cases about different assumptions of names in the person class, there are many situations should be taken into consideration, which will be convenient if we introduce the inheritance.

According to the seventh assumption of Falsehoods cases of name, people's name do not change, which is obviously wrong. The name can be updated. However, in order to improve the security of person class, the name attribute should be private. If we want to update the attribute, we can use get and set method, for example, we can create the getName() method and setName() method in person class to set name and get name. In this way, we can improve the security of system as well as operate the name conveniently. 

It is also mentioned that people's name are written in ASCII, however, Chinese names and Japanese names are not included in ASCII, therefore, name systems can no longer be stored in a database of ASCII chars, now we can store the name in the form of UTF-8 in database.

As for the fourth assumption, people have, at this point in time, one full name which they go by. It seems that Irish people have their English names as well as their Irish names, therefore, when design the person class, the number of names should not be restricted to only one. According to LSP principle, there are two conditions should be considered, that is, if/else should not be used to judge the type of subclasses, and subclasses are able to replace the position where superclasses have appeared.  Maybe we can create another subclass inherits the person class, which is able to substitute the person class so that ensure the number of name is not only one.

